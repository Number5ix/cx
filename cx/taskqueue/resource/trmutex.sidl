#include "taskresource.sidl"
#include <cx/thread/mutex.h>

class ComplexTask;

// Simple resource that locks a mutex.

// Keeps a simple list of tasks waiting on the lock and releases them in rough FIFO order.
// Does not guarantee that the tasks execute in FIFO order; in some circumstances a task
// that has been woken up by something else may cut in line.

// Not suitable for an extremely large number of waiting tasks. For efficient support of a
// very large number of tasks or for strict FIFO ordering, see TRFifo instead.

// Non-tasks may lock the mutex as well, which will prevent any tasks from running while it
// is locked. If locking the mutex from outside the class, be sure to call wakeup after
// releasing it!

class TRMutex extends TaskResource {
    Mutex mtx;
    void wakeup();   // releases a task from the wait list

    Mutex _wlmtx;
    hashtable:object:none _waitlist;

    factory create();
}