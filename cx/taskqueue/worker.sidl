#include <cx/taskqueue/task.sidl>
#include <cx/thread.h>

class TaskQueueWorker {
    object:Thread thr;      // worker thread
    atomic:ptr curtask;     // this worker's currently running task
    int32 num;              // worker number
    bool shutdown;

    factory create(int32 num);
    bool _startThread(TaskQueue *tq);

    // hooks for derived classes to override if desired
    void startup(TaskQueue *tq);        // worker is starting up
    void tick(TaskQueue *tq, TQUICallback ui);      // worker should process tasks (call parent!)
    void shutdown(TaskQueue *tq);       // worker is shutting down
}
