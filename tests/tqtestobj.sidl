#include <cx/taskqueue/task/complextask.sidl>
//#include <cx/taskqueue/mtask.sidl>
#include <cx/thread/event.h>

class TQTest1 extends Task
{
    int num[2];
    int total;
    Event *notify;

    factory create(int num1, int num2, Event *notify);
}

class TQTestFail extends Task
{
    int n;
    Event *notify;

    factory create(int n, Event *notify);
}

class TQTestCC1 extends Task
{
    int num[2];
    TaskQueue *destq;
    int *accum;
    int *counter;
    Event *notify;

    factory create(int num1, int num2, TaskQueue *destq, int *accum, int *counter, Event *notify);
}

class TQTestCC2 extends Task
{
    int total;
    int *accum;
    int *counter;
    Event *notify;

    factory create(int total, int *accum, int *counter, Event *notify);
}

abstract class TQTestSched extends ComplexTask
{
    Event *notify;
}

class TQTestS1 extends TQTestSched
{
    int order;
    int64 dtime;
    int64 rantime;
    factory create(int order, int64 dtime, Event *notify);
}

class TQTestS2 extends TQTestSched
{
    object:Task waitfor;
    factory create(Task *waitfor, Event *notify);
}

class TQDelayTest extends Task
{
    int64 len;
    factory create(int64 len);
}

class TQMTest extends ComplexTask
{
    Event *notify;
    override run;

    factory create(Event *notify);
    destroy();
}
